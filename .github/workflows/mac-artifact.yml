name: Mac Artifact
on:
  push:
    branches: [actionsHub, main, test-ready, mac_build]
  pull_request:
    branches: [actionsHub]
  workflow_call:
    inputs:
      submodule:
        description: The directory of the submodule, if this workflow is being called on a submodule
        required: false
        type: string
jobs:
  build:
    runs-on: macos-10.15
    strategy:
      matrix:
        ev-lib: ["", libev, libuv, libevent]
    env:
      LIBYAML_VERSION: 0.2.5
    steps:
    - uses: kenchan0130/actions-system-info@master
      id: system-info
    - name: Install event libs
      run: |
        brew install libev automake # libuv and libevent already installed
    - name: Checkout benchmark
      uses: actions/checkout@v2
      with: 
        path: benchmark
        submodules: recursive
    - name: Build benchmark
      run: |
        make EVENT_LIB=${{ matrix.ev-lib }}
      working-directory: ${{ inputs.submodule || '.' }}/benchmark
    - name: Sanity test asbench artifact
      run: |
        ./benchmark | grep "ERROR Failed to connect"
      working-directory: ${{ inputs.submodule || '.' }}/benchmark/target
    - name: Get artifact name
      run: |
        set -e
        NAME=-${{ matrix.ev-lib}}
        if [ "${NAME}" = "-" ]; then NAME="" ; fi
        echo "::set-output name=name::benchmark$NAME"
      id: get_name
    # - name: Move artifacts to target dir HACK # This could be done in the makefile
    #   run: |
    #     cd ${{ inputs.submodule || '.' }}
    #     mkdir -p tmp/target/${{ steps.system-info.outputs.platform }}-${{ runner.arch }}/${{ runner.os }}-${{ steps.system-info.outputs.release }}
    #     mv target/benchmark tmp/target/${{ steps.system-info.outputs.platform }}-${{ runner.arch }}/${{ runner.os }}-${{ steps.system-info.outputs.release }}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with: 
        name: ${{ steps.system-info.outputs.platform }}-${{ runner.arch }}-${{ runner.os }}-${{ steps.system-info.outputs.release }}-asbench
        path: ${{ inputs.submodule || '.' }}/benchmark/target/benchmark
        if-no-files-found: error
  bundle-binaries:
    needs: build
    runs-on: macos-10.15
    
    steps:
      # - name: Checkout benchmark
      #   uses: actions/checkout@v2
      #   with: 
      #     submodules: recursive
      - uses: kenchan0130/actions-system-info@master
        id: system-info
      - name: Get artifacts
        uses: actions/download-artifact@v2
        with: 
          path: target/${{ steps.system-info.outputs.platform }}-${{ runner.arch }}-${{ runner.os }}-${{ steps.system-info.outputs.release }}-asbench
      # - name: Create tarball
      #   run: tar -czf binaries.tgz target
      - name: Get artifact name
        uses: haya14busa/action-cond@v1
        id: artifact-name
        with:
          cond: ${{ inputs.submodule != '' }}
          if_true: ${{ inputs.submodule }}-binaries
          if_false: binaries
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact-name.outputs.value }}
          path: target
          if-no-files-found: error
